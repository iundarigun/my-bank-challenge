plugins {
    id "org.springframework.boot" version "2.5.1"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "checkstyle"
}

group = "br.com.devcave.mybank"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("springCloudVersion", "2020.0.3")
    set("mapstructVersion", "1.4.2.Final")
    set("swaggerVersion", "3.0.0")
    set("fakerVersion", "1.0.2")
    set("testContainersVersion", "1.15.3")

}

dependencies {
    // Web
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    // Database
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    runtimeOnly "org.postgresql:postgresql"
    implementation "org.flywaydb:flyway-core"

    // Lombok
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // Mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // OpenFeign
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j"

    //Swagger
    implementation "io.springfox:springfox-boot-starter:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    // Health and log tracing
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"

    // Tests
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "com.github.javafaker:javafaker:${fakerVersion}"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

tasks.register("integrationTests", Test) {
    useJUnitPlatform {
        includeTags "integration"
        excludeTags "unit"
    }
}

tasks.register("unitTest", Test) {
    useJUnitPlatform {
        excludeTags "integration"
        includeTags "unit"
    }
}

checkstyle {
    toolVersion = "8.11"
    configFile = new File(rootDir, "checkstyle.xml")
}
